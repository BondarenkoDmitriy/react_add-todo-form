{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","classNames","TodoList","todos","map","userId","usersFromServer","find","App","useState","setTitle","userSelect","setUserSelect","visibleTodos","addTodo","showTitleError","setShowTitleError","showUserError","setShowUserError","action","method","onSubmit","event","preventDefault","trimmedTitle","trim","isValidTitle","isValidUser","newTodo","Math","max","state","type","placeholder","value","onChange","input","target","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c9e2b2d9.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../api/types/interface';\nimport './UserInfo.scss';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\nimport { Todo } from '../../api/types/interface';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    user,\n    completed,\n    title,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={\n        classNames('TodoInfo', {\n          'TodoInfo--completed': completed,\n        })\n      }\n    >\n\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../api/types/interface';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import { useState, FormEvent, ChangeEvent } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './api/types/interface';\n\nfunction getMaxTodoId(todos: Todo[]) {\n  return Math.max(...todos.map(({ id }) => id)) + 1;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer.find(({ id }) => id === todo.userId) || null,\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userSelect, setUserSelect] = useState('');\n  const [visibleTodos, addTodo] = useState(todos);\n  const [showTitleError, setShowTitleError] = useState(false);\n  const [showUserError, setShowUserError] = useState(false);\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const trimmedTitle = title.trim();\n    const isValidTitle = !!trimmedTitle;\n\n    setShowTitleError(!isValidTitle);\n\n    const isValidUser = !!userSelect;\n\n    setShowUserError(!isValidUser);\n\n    if (isValidTitle && isValidUser) {\n      const user = usersFromServer\n        .find(({ name }) => name === userSelect) || null;\n      const newId = getMaxTodoId(visibleTodos);\n      const newTodo: Todo = {\n        id: newId,\n        title: trimmedTitle,\n        completed: false,\n        userId: user?.id ?? null,\n        user,\n      };\n\n      addTodo(state => [...state, newTodo]);\n      setUserSelect('');\n      setTitle('');\n      setShowTitleError(false);\n      setShowUserError(false);\n    }\n  };\n\n  const handleChangeTitle = (event: ChangeEvent<HTMLInputElement>) => {\n    const input = event.target.value;\n\n    setTitle(input.replace(/[^a-zA-Zа-яА-Я0-9\\s]/g, ''));\n  };\n\n  const handleChangeSelect = (event: ChangeEvent<HTMLSelectElement>) => (\n    setUserSelect(event.target.value));\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            <span>Titile: </span>\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"EnterTitle\"\n              value={title}\n              onChange={handleChangeTitle}\n            />\n          </label>\n\n          {showTitleError && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            <span>User: </span>\n            <select\n              data-cy=\"userSelect\"\n              value={userSelect}\n              onChange={handleChangeSelect}\n            >\n              <option value=\"\" disabled>Choose a user</option>\n\n              {usersFromServer.map(({ name, id }) => (\n                <option value={name} key={id}>\n                  {name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {showUserError && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}