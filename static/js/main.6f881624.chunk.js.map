{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","classNames","TodoList","todos","map","getUserByID","usersFromServer","find","userId","App","useState","visibleTodos","setVisibleTodos","setTitle","setUserId","showTitleError","setShowTitleError","showUserError","setShowUserError","onSubmit","event","preventDefault","trimmedTitle","trim","elementToAdd","Math","max","htmlFor","type","placeholder","autoComplete","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f881624.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../api/types/interface';\nimport './UserInfo.scss';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\nimport { Todo } from '../../api/types/interface';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    user,\n    completed,\n    title,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={\n        classNames('TodoInfo', {\n          'TodoInfo--completed': completed,\n        })\n      }\n    >\n\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../api/types/interface';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import {\n  useState,\n  FormEvent,\n  ChangeEvent,\n  FC,\n} from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo, User } from './api/types/interface';\n\nfunction getUserByID(id: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === id);\n\n  return foundUser || null;\n}\n\nfunction getMaxId(todos: Todo[]): number {\n  return Math.max(...todos.map(todo => todo.id)) + 1;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserByID(todo.userId),\n}));\n\nexport const App: FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>(todos);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState('0');\n  const [showTitleError, setShowTitleError] = useState(false);\n  const [showUserError, setShowUserError] = useState(false);\n\n  const handleChangeTitle = (event: ChangeEvent<HTMLInputElement>) => {\n    if (showTitleError) {\n      setShowTitleError(false);\n    }\n\n    setTitle(event.target.value);\n  };\n\n  const handleChangeUsers = (event: ChangeEvent<HTMLSelectElement>) => {\n    setShowUserError(false);\n    setUserId(event.target.value);\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    const trimmedTitle = title.trim();\n    const user = getUserByID(+userId);\n\n    if (!trimmedTitle) {\n      setShowTitleError(true);\n    }\n\n    if (!user) {\n      setShowUserError(true);\n    }\n\n    if (!trimmedTitle || !user) {\n      return;\n    }\n\n    const newId = getMaxId(visibleTodos);\n\n    const elementToAdd: Todo = {\n      id: newId,\n      title,\n      completed: false,\n      userId: user.id,\n      user,\n    };\n\n    setVisibleTodos([...visibleTodos, elementToAdd]);\n    setTitle('');\n    setUserId('0');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"newTodoTitle\">\n            Title:\n\n            <input\n              type=\"text\"\n              id=\"newTodoTitle\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title here\"\n              autoComplete=\"off\"\n              value={title}\n              onChange={handleChangeTitle}\n            />\n\n            {showTitleError && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"newTodoUser\">\n            User:\n\n            <select\n              id=\"newTodoUser\"\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleChangeUsers}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(({ id, name }) => (\n                <option\n                  value={id}\n                  key={id}\n                >\n                  {name}\n                </option>\n              ))}\n            </select>\n\n            {showUserError && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n          </label>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}